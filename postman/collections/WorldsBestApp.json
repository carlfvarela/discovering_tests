{
	"info": {
		"_postman_id": "49f46084-49ee-4a40-96ba-bfb53fb1869e",
		"name": "Worlds Best App",
		"description": "API tests for the worlds best app",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b5da03b8-9fc9-483f-a464-d77aef4ff3b3",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"the username is returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.username).to.eql('Dr I Test');",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"test@drugdev.com\",\n\t\"password\": \"supers3cret\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"login"
					]
				},
				"description": "Create succesfully login request"
			},
			"response": []
		},
		{
			"name": "Login Error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "22905655-9fe8-4bd7-bc1d-570ec4836ee1",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"return an array of errors\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.be.above(0);",
							"});",
							"",
							"pm.test(\"return an first error title is 'Credentials are incorrect' \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors[0].title).to.eql('Credentials are incorrect');",
							"});",
							"",
							"// unable to simulate 401 error; as 401 is related to unauthorized access returned the string if wrong credentials are used",
							"",
							"pm.test(\"Status code is 401\", function () {",
							"    var jsonData = pm.response.json()",
							"    //as code 401 is for unauthorized access ",
							"    if (pm.expect(jsonData.errors[0].title).to.eql('Credentials are incorrect')){",
							"        return \"Status code is 401\"",
							"    }",
							"});",
							"",
							"// this test for 401 error is correct, just not being able to force a 401 error ",
							"",
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"test@drugdev.com\",\n\t\"password\": \"supers3ceret\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/login?postman-token=\"898473f1-f33f-4336-b431-rd847b4ec\"rrr",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"login"
					],
					"query": [
						{
							"key": "postman-token",
							"value": "\"898473f1-f33f-4336-b431-rd847b4ec\"rrr"
						}
					]
				},
				"description": "Create error login request"
			},
			"response": []
		}
	]
}